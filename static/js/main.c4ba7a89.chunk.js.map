{"version":3,"sources":["components/header.js","components/blog.js","components/projects.js","components/videos.js","components/about.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","state","className","this","view","onClick","changeView","React","Component","Blog","Projects","Videos","from","marginLeft","transform","to","style","About","App","bind","newview","setState","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qPAGqBA,G,kBAEjB,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAM,GAFI,E,sEAKV,IAAD,OACJ,OACI,yBAAKC,UAAU,UACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,SAAf,oBAEJ,yBAAKA,UAAU,mBACX,4BAAQA,UAA+B,SAAnBC,KAAKH,MAAMI,KAAkB,WAAa,cAAeC,QAAS,kBAAM,EAAKL,MAAMM,WAAW,WAAlH,kBACA,4BAAQJ,UAA+B,YAAnBC,KAAKH,MAAMI,KAAqB,WAAa,cAAeC,QAAS,kBAAM,EAAKL,MAAMM,WAAW,cAArH,kBACA,4BAAQJ,UAA+B,QAAnBC,KAAKH,MAAMI,KAAiB,WAAa,cAAeC,QAAS,kBAAK,EAAKL,MAAMM,WAAW,UAAhH,kBACA,4BAAQJ,UAA+B,UAAnBC,KAAKH,MAAMI,KAAmB,WAAa,cAAeC,QAAS,kBAAK,EAAKL,MAAMM,WAAW,YAAlH,wB,GAjBgBC,IAAMC,YCDrBC,E,YAEjB,WAAYT,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAM,GAFI,E,sEAMf,OACI,yBAAKC,UAAU,QAAf,Y,GATsBK,IAAMC,WCAnBE,E,YAEjB,WAAYV,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAM,GAFI,E,sEAMf,OACI,yBAAKC,UAAU,YAAf,gB,GAT0BK,IAAMC,W,OCCvBG,E,YAEjB,WAAYX,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAM,GAFI,E,sEAMf,OACI,kBAAC,SAAD,CAASW,KAAM,CAAEC,YAAc,IAAMC,UAAW,iBAAmBC,GAAI,CAAEF,WAAa,EAAEC,UAAW,kBAC9F,SAAAd,GAAK,OACL,yBAAKE,UAAU,SAASc,MAAOhB,GAA/B,iB,GAXmBO,IAAMC,WCArBS,E,YAEjB,WAAYjB,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAM,GAFI,E,sEAMf,OACI,6BACI,yBAAKC,UAAU,SAAf,6EAC2E,6BAAK,6BADhF,8EAE+E,6BAF/E,8BAG+B,6BAH/B,8BAI+B,6BAJ/B,2BAK4B,6BAAK,6BAAK,6BALtC,mB,GAVmBK,IAAMC,WCMnBU,E,YAEpB,WAAYlB,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAM,CAACG,KAAK,SACjB,EAAKE,WAAa,EAAKA,WAAWa,KAAhB,gBAHD,E,wEAORC,GACTjB,KAAKkB,SAAS,CAACjB,KAAOgB,M,+BAKtB,OACE,yBAAKlB,UAAU,OACb,kBAAC,EAAD,CAAQE,KAAMD,KAAKF,MAAMG,KAAME,WAAYH,KAAKG,aAChD,yBAAKJ,UAAU,QACZ,CACC,SAAa,kBAAC,EAAD,MACb,KAAQ,kBAAC,EAAD,MACR,OAAW,kBAAC,EAAD,MACX,MAAU,kBAAC,EAAD,OAAWC,KAAKF,MAAMG,OAEnC,yBAAKF,UAAU,UACb,0BAAMA,UAAU,QAAhB,aADF,IACuC,0BAAMA,UAAU,UAAhB,a,GA1BdK,IAAMC,WCGpBc,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.c4ba7a89.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nexport default class Header extends React.Component  {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={};\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"header\">\r\n                <div className=\"profil\">\r\n                    <div className=\"title\">FÃ‰LIX HUBERT</div>\r\n                </div>\r\n                <div className='buttoncontainer'>\r\n                    <button className={ this.props.view == 'about' ? 'selected' : 'notselected'} onClick={() => this.props.changeView('about')} > ðŸ‘¨ </button>\r\n                    <button className={ this.props.view == 'projects' ? 'selected' : 'notselected'} onClick={() => this.props.changeView('projects')} > ðŸ’¾ </button>\r\n                    <button className={ this.props.view == 'blog' ? 'selected' : 'notselected'} onClick={() =>this.props.changeView('blog')} > ðŸ“ƒ </button>\r\n                    <button className={ this.props.view == 'videos' ? 'selected' : 'notselected'} onClick={() =>this.props.changeView('videos')} > ðŸŽ¥ </button>\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\n","import React from 'react';\r\n\r\nexport default class Blog extends React.Component  {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={};\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"blog\">blog</div>\r\n        )\r\n    }\r\n\r\n}","import React from 'react';\r\n\r\nexport default class Projects extends React.Component  {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={};\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"projects\">Projects</div>\r\n        )\r\n    }\r\n\r\n}","import React from 'react';\r\nimport { Spring  } from 'react-spring/renderprops';\r\n\r\nexport default class Videos extends React.Component  {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={};\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Spring  from={{ marginLeft : -2000 ,transform: \"rotate(20deg)\" }} to={{ marginLeft : 0,transform: \"rotate(0deg)\"}}  >\r\n                {props => \r\n               ( <div className=\"videos\" style={props}>\r\n                   videos\r\n                </div>)\r\n                }\r\n            </Spring>\r\n        )\r\n    }\r\n\r\n}","import React from 'react';\r\nimport { Spring  } from 'react-spring/renderprops';\r\n\r\nexport default class About extends React.Component  {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={};\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div className=\"about\" >\r\n                    Hi, nice to meet you ! I am FÃ©lix, an engineering student from France. <br/><br/>\r\n                    This is my personal website, with random projects sorted in 3 categories : <br/>\r\n                    - Computer & Science stuff <br/>\r\n                    - Opinion pieces & stories <br/>\r\n                    - Art & Videos projects <br/><br/><br/>\r\n\r\n                    Have fun !\r\n                </div>\r\n\r\n            </div>\r\n            \r\n        )\r\n    }\r\n\r\n}","import React from 'react';\nimport './App.css';\n\nimport Header from './components/header.js'\nimport Blog from './components/blog.js'\nimport Projects from './components/projects.js'\nimport Videos from './components/videos.js'\nimport About from './components/about.js'\n\nexport default  class App extends React.Component  {\n\n  constructor(props) {\n    super(props);\n    this.state={view:\"about\"};\n    this.changeView = this.changeView.bind(this)\n\n  }\n  \n  changeView(newview){\n    this.setState({view : newview})\n  }\n\n  render(){\n\n    return (\n      <div className=\"app\">\n        <Header view={this.state.view} changeView={this.changeView}/>\n        <div className=\"view\">\n          {{\n            'projects' : <Projects/>,\n            'blog': <Blog/>,\n            'videos' : <Videos/>,\n            'about' : <About/> }[this.state.view]}\n         </div> \n         <div className=\"footer\">\n           <span className=\"date\">Â© 2019</span> <span className=\"social\">FTW</span>\n         </div>\n      </div>\n    );\n  }\n \n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}